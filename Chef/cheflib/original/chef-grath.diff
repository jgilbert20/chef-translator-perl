*** chef.c	Mon Nov 11 13:23:23 1996
--- ../chef-hack.c	Mon Nov 11 13:23:07 1996
***************
*** 8,18 ****
--- 8,25 ----
  
      Arjan Kenter, 16 Dec 1994
                    19 Dec 1994 LaTeX related bugs fixed (forgot to test...)
+ 
+ 
+     Jeremy Gilbert -- November 11, 1996 (grath@cs.brandeis.edu)
+                   Modified this stuff to use my streamhack library
+ 		  so it could be incorperated into a perl module.
+ 
  */
  
  #include <stdio.h>
  #include <stdlib.h>
  #include <string.h>
+ #include "streamhack.h"
  
  #define INWORD "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'"
  
***************
*** 30,36 ****
      int c;
      if (mtch == head)
        {
!         if (eofl || (c = getchar ()) == EOF)
            {
              eofl = 1;
              return EOF;
--- 37,43 ----
      int c;
      if (mtch == head)
        {
!         if (eofl || (c = sh_getchar ()) == EOF)
            {
              eofl = 1;
              return EOF;
***************
*** 99,105 ****
      if ((c = nextchar ()) != EOF)
        {
          accept ();
!         putchar (c);
        }
    }
  
--- 106,112 ----
      if ((c = nextchar ()) != EOF)
        {
          accept ();
!         sh_putchar (c);
        }
    }
  
***************
*** 133,202 ****
          if (beginword)
            {
              icount = 0;
!             if (match ("e"))    {accept (); inword = 1; printf ("i"); continue;}
!             if (match ("E"))    {accept (); inword = 1; printf ("I"); continue;}
!             if (match ("o"))    {accept (); inword = 1; printf ("oo"); continue;}
!             if (match ("O"))    {accept (); inword = 1; printf ("Oo"); continue;}
!             if (match ("bork")) {accept (); inword = 1; printf ("bork"); continue;}
!             if (match ("Bork")) {accept (); inword = 1; printf ("Bork"); continue;}
            }
  
          if (inword)
            {
!             if (match ("ew"))   {accept (); inword = 1; printf ("oo"); continue;}
!             if (match ("f"))    {accept (); inword = 1; printf ("ff"); continue;}
!             if (match ("ir"))   {accept (); inword = 1; printf ("ur"); continue;}
!             if (match ("ow"))   {accept (); inword = 1; printf ("oo"); continue;}
!             if (match ("o"))    {accept (); inword = 1; printf ("u");  continue;}
!             if (match ("u"))    {accept (); inword = 1; printf ("oo"); continue;}
!             if (match ("U"))    {accept (); inword = 1; printf ("Oo"); continue;}
!             if (match ("tion")) {accept (); inword = 1; printf ("shun"); continue;}
!             if (match ("i"))    {accept (); inword = 1; printf (icount++ ? "i" : "ee"); continue;}
!             if (match ("e")  && eow ()) {accept (); inword = 0; printf ("e-a"); continue;}
!             if (match ("en") && eow ()) {accept (); inword = 0; printf ("ee"); continue;}
!             if (match ("th") && eow ()) {accept (); inword = 0; printf ("t"); continue;}
!           }
! 
!         if (match ("an"))  {accept (); inword = 1; printf ("un");  continue;}
!         if (match ("An"))  {accept (); inword = 1; printf ("Un");  continue;}
!         if (match ("au"))  {accept (); inword = 1; printf ("oo");  continue;}
!         if (match ("Au"))  {accept (); inword = 1; printf ("Oo");  continue;}
!         if (match ("the")) {accept (); inword = 1; printf ("zee"); continue;}
!         if (match ("The")) {accept (); inword = 1; printf ("Zee"); continue;}
!         if (match ("v"))   {accept (); inword = 1; printf ("f");   continue;}
!         if (match ("V"))   {accept (); inword = 1; printf ("F");   continue;}
!         if (match ("w"))   {accept (); inword = 1; printf ("v");   continue;}
!         if (match ("W"))   {accept (); inword = 1; printf ("V");   continue;}
!         if (match ("a") && !eow ()) {accept (); inword = 1; printf ("e"); continue;}
!         if (match ("A") && !eow ()) {accept (); inword = 1; printf ("E"); continue;}
          if (match (".") &&  eol () && bork)
            {
!             accept (); inword = 0; printf (".\nBork Bork Bork!");
              continue;
            }
  
          inword = strchr (INWORD, c) != NULL;
          echo ();
        }
-   }
- 
- int main (int argc, char **argv)
-   {
-     if (argc > 2)
-       {
-         fprintf (stderr, "Usage: chef [file]\n");
-         exit (1);
-       }
-     if (argc == 2)
-       {
-         if (freopen (argv[1], "r", stdin) == NULL)
-           {
-             fprintf (stderr, "Can't open '%s'.\n", argv[1]);
-             exit (1);
-           }
-       }
-     chef ();
-     return 0;
    }
  
  
--- 140,190 ----
          if (beginword)
            {
              icount = 0;
!             if (match ("e"))    {accept (); inword = 1; sh_printf ("i"); continue;}
!             if (match ("E"))    {accept (); inword = 1; sh_printf ("I"); continue;}
!             if (match ("o"))    {accept (); inword = 1; sh_printf ("oo"); continue;}
!             if (match ("O"))    {accept (); inword = 1; sh_printf ("Oo"); continue;}
!             if (match ("bork")) {accept (); inword = 1; sh_printf ("bork"); continue;}
!             if (match ("Bork")) {accept (); inword = 1; sh_printf ("Bork"); continue;}
            }
  
          if (inword)
            {
!             if (match ("ew"))   {accept (); inword = 1; sh_printf ("oo"); continue;}
!             if (match ("f"))    {accept (); inword = 1; sh_printf ("ff"); continue;}
!             if (match ("ir"))   {accept (); inword = 1; sh_printf ("ur"); continue;}
!             if (match ("ow"))   {accept (); inword = 1; sh_printf ("oo"); continue;}
!             if (match ("o"))    {accept (); inword = 1; sh_printf ("u");  continue;}
!             if (match ("u"))    {accept (); inword = 1; sh_printf ("oo"); continue;}
!             if (match ("U"))    {accept (); inword = 1; sh_printf ("Oo"); continue;}
!             if (match ("tion")) {accept (); inword = 1; sh_printf ("shun"); continue;}
!             if (match ("i"))    {accept (); inword = 1; sh_printf (icount++ ? "i" : "ee"); continue;}
!             if (match ("e")  && eow ()) {accept (); inword = 0; sh_printf ("e-a"); continue;}
!             if (match ("en") && eow ()) {accept (); inword = 0; sh_printf ("ee"); continue;}
!             if (match ("th") && eow ()) {accept (); inword = 0; sh_printf ("t"); continue;}
!           }
! 
!         if (match ("an"))  {accept (); inword = 1; sh_printf ("un");  continue;}
!         if (match ("An"))  {accept (); inword = 1; sh_printf ("Un");  continue;}
!         if (match ("au"))  {accept (); inword = 1; sh_printf ("oo");  continue;}
!         if (match ("Au"))  {accept (); inword = 1; sh_printf ("Oo");  continue;}
!         if (match ("the")) {accept (); inword = 1; sh_printf ("zee"); continue;}
!         if (match ("The")) {accept (); inword = 1; sh_printf ("Zee"); continue;}
!         if (match ("v"))   {accept (); inword = 1; sh_printf ("f");   continue;}
!         if (match ("V"))   {accept (); inword = 1; sh_printf ("F");   continue;}
!         if (match ("w"))   {accept (); inword = 1; sh_printf ("v");   continue;}
!         if (match ("W"))   {accept (); inword = 1; sh_printf ("V");   continue;}
!         if (match ("a") && !eow ()) {accept (); inword = 1; sh_printf ("e"); continue;}
!         if (match ("A") && !eow ()) {accept (); inword = 1; sh_printf ("E"); continue;}
          if (match (".") &&  eol () && bork)
            {
!             accept (); inword = 0; sh_printf (".\nBork Bork Bork!");
              continue;
            }
  
          inword = strchr (INWORD, c) != NULL;
          echo ();
        }
    }
  
  
